import { EventEmitter, ElementRef, SimpleChanges, OnChanges, OnDestroy } from '@angular/core';
import { SidebarConfig, PositionType, ModeType } from './sidebar.config';
import { SidebarService } from './sidebar.service';
/**
 * 侧边栏
 */
export declare class SidebarComponent implements OnChanges, OnDestroy {
    private _sidebarService;
    /**
     * 状态，true表示打开，false表示关闭
     */
    status: boolean;
    statusChange: EventEmitter<boolean>;
    /**
     * 位置方向，默认：`left`
     */
    position: PositionType;
    /**
     * 类型，默认：`slide`
     * - over: 不覆盖
     * - slide：侧边移动
     */
    mode: ModeType;
    /**
     * 允许点击背景关闭，默认：`true`
     */
    backdrop: boolean;
    /**
     * 自定义CLSS
     */
    sidebarClass: string;
    /**
     * 辅助设备标识
     */
    ariaLabel: string;
    /** 打开前回调 */
    openStart: EventEmitter<null>;
    /** 打开后回调 */
    opened: EventEmitter<null>;
    /** 关闭前回调 */
    closeStart: EventEmitter<null>;
    /** 关闭后回调 */
    closed: EventEmitter<null>;
    /** 模式变更通知 */
    modeChange: EventEmitter<string>;
    /** 位置变更通知 */
    positionChange: EventEmitter<string>;
    _rerender: EventEmitter<null>;
    _elSidebar: ElementRef;
    private _openSub;
    private _closeSub;
    private _clickEvent;
    private _onClickOutsideAttached;
    private _anting;
    constructor(_sidebarService: SidebarService, config: SidebarConfig);
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    /** 打开侧边栏 */
    open(): void;
    /** 关闭侧边栏 */
    close(): void;
    /** 手动触发容器的重新渲染 */
    _triggerRerender(): void;
    _getStyle(): CSSStyleDeclaration;
    private closeAnt();
    private _initCloseListeners();
    private _destroyCloseListeners();
    private _onClickOutside(e);
    /** 获取侧边栏容器高度 */
    readonly _height: number;
    /** 获取侧边栏容器宽度 */
    readonly _width: number;
}
